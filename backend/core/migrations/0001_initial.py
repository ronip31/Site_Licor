# Generated by Django 5.1 on 2024-09-03 04:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Administrador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("senha", models.CharField(max_length=255)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "administrador",
            },
        ),
        migrations.CreateModel(
            name="Categoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "categoria",
            },
        ),
        migrations.CreateModel(
            name="Configuracao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chave", models.CharField(max_length=255)),
                ("valor", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "configuracao",
            },
        ),
        migrations.CreateModel(
            name="Marca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "marca",
            },
        ),
        migrations.CreateModel(
            name="TipoLicor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "tipo_licor",
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("nome", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("telefone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("administrador", "Administrador"),
                            ("cliente", "Cliente"),
                        ],
                        default="cliente",
                        max_length=50,
                    ),
                ),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "usuario",
            },
        ),
        migrations.CreateModel(
            name="Endereco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("endereco", models.TextField()),
                ("cidade", models.CharField(max_length=200)),
                ("estado", models.CharField(max_length=100)),
                ("cep", models.CharField(max_length=20)),
                ("pais", models.CharField(max_length=100)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "endereco",
            },
        ),
        migrations.CreateModel(
            name="LogAcao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("acao", models.TextField()),
                ("data_acao", models.DateTimeField(auto_now_add=True)),
                (
                    "admin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.administrador",
                    ),
                ),
            ],
            options={
                "db_table": "log_acao",
            },
        ),
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_pedido", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pendente", "Pendente"),
                            ("Processando", "Processando"),
                            ("Enviado", "Enviado"),
                        ],
                        default="Pendente",
                        max_length=50,
                    ),
                ),
                ("valor_total", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pedido",
            },
        ),
        migrations.CreateModel(
            name="Pagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metodo_pagamento", models.CharField(max_length=50)),
                (
                    "status_pagamento",
                    models.CharField(
                        choices=[("Pago", "Pago"), ("Pendente", "Pendente")],
                        default="Pendente",
                        max_length=50,
                    ),
                ),
                ("data_pagamento", models.DateTimeField(auto_now_add=True)),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.pedido"
                    ),
                ),
            ],
            options={
                "db_table": "pagamento",
            },
        ),
        migrations.CreateModel(
            name="HistoricoPedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status_antigo", models.CharField(max_length=50)),
                ("status_novo", models.CharField(max_length=50)),
                ("data_modificacao", models.DateTimeField(auto_now_add=True)),
                (
                    "admin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.administrador",
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.pedido"
                    ),
                ),
            ],
            options={
                "db_table": "historico_pedido",
            },
        ),
        migrations.CreateModel(
            name="Produto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                ("descricao", models.TextField()),
                ("preco_custo", models.DecimalField(decimal_places=2, max_digits=10)),
                ("preco_venda", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantidade_estoque", models.IntegerField()),
                ("sku", models.CharField(max_length=255, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Ativo", "Ativo"), ("Inativo", "Inativo")],
                        default="Ativo",
                        max_length=50,
                    ),
                ),
                (
                    "teor_alcoolico",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("volume", models.CharField(blank=True, max_length=50, null=True)),
                ("data_adicionado", models.DateTimeField(auto_now_add=True)),
                ("data_modificado", models.DateTimeField(auto_now=True)),
                (
                    "categoria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.categoria",
                    ),
                ),
                (
                    "marca",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.marca",
                    ),
                ),
                (
                    "tipo_licor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.tipolicor",
                    ),
                ),
            ],
            options={
                "db_table": "produtos",
            },
        ),
        migrations.CreateModel(
            name="ImagemProduto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "imagem",
                    models.ImageField(blank=True, null=True, upload_to="produtos/"),
                ),
                ("descricao_imagem", models.TextField(blank=True, null=True)),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imagens",
                        to="core.produto",
                    ),
                ),
            ],
            options={
                "db_table": "imagem_produto",
            },
        ),
        migrations.CreateModel(
            name="Avaliacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nota", models.IntegerField()),
                ("comentario", models.TextField(blank=True, null=True)),
                ("data_avaliacao", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.produto"
                    ),
                ),
            ],
            options={
                "db_table": "avaliacao",
            },
        ),
        migrations.CreateModel(
            name="Desconto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("percentual", models.DecimalField(decimal_places=2, max_digits=5)),
                ("data_inicio", models.DateTimeField()),
                ("data_fim", models.DateTimeField()),
                ("descricao", models.TextField(blank=True, null=True)),
                (
                    "categoria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descontos",
                        to="core.categoria",
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descontos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "produto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descontos",
                        to="core.produto",
                    ),
                ),
                (
                    "tipo_licor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descontos",
                        to="core.tipolicor",
                    ),
                ),
            ],
            options={
                "db_table": "desconto",
            },
        ),
    ]
